{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Logo/brain.jpg","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","registerServiceWorker.js","index.js"],"names":["FaceRecognition","imageUrl","box","className","alt","id","src","width","height","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","brain","borderRadius","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","onClick","Rank","name","enteries","SignIn","props","onEmailChange","event","setState","SignInEmail","target","value","onPasswordChange","SignInPassword","onSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","user","loadUser","OnRouteChange","this","htmlFor","React","Component","Register","RegisterEmail","RegisterPassword","onNameChange","RegisterName","onRegister","initialState","input","route","IsSignedIn","joined","App","data","DisplayBox","boxs","url","response","outputs","regions","count","Object","assign","catch","console","log","calculateface","clarifaiFace","region_info","bounding_box","image","document","getElementById","left_col","top_row","right_col","bottom_row","rout","fpsLimit","interactivity","events","onHover","enable","mode","resize","particles","color","links","distance","opacity","collisions","move","direction","outMode","random","speed","straight","number","density","area","shape","size","detectRetina","marginTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f2dc07fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n    if (imageUrl !== '') {\r\n        return (\r\n            <div className='center'>\r\n                <div className='absolute ma2'>\r\n                    <img\r\n                        alt='Please give me a jpg image link'\r\n                        id='inputimage'\r\n                        src={imageUrl}\r\n                        width='500px' height='auto'\r\n                    />\r\n                    <div className='bounding-box' style={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div></div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","export default __webpack_public_path__ + \"static/media/brain.eea55d5b.jpg\";","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport brain from './brain.jpg'\r\n\r\nconst Logo = () =>{\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 120, width: 120 }} >\r\n                <div className=\"Tilt-inner pa0.5\"> \r\n                    <img src={brain} alt='logo' style={{borderRadius:'10px'}}/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div>\r\n            <p className='f4'>\r\n                {'This magic brain will detect faces in your picture, just give it a try...'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 ma4 br3 shadow-5'>\r\n                    <input className='f4 pa2 center w-70' type='text'\r\n                        onChange={onInputChange}\r\n                    />\r\n                    <button className='w-30 grow center f4 link ph3 pv2 white bg-light-purple pointer'\r\n                        onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({ name, enteries }) => {\r\n    return (\r\n        <div>\r\n            <div className='white f4'>\r\n                {`Hey ${name}, your current count is....`}\r\n            </div>\r\n            <div className='f2 white'>\r\n                {enteries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            SignInEmail: '',\r\n            SignInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ SignInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ SignInPassword: event.target.value })\r\n    }\r\n\r\n    onSignIn = () => {\r\n        fetch('https://mighty-ocean-50915.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.SignInEmail,\r\n                password: this.state.SignInPassword\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user)\r\n                    this.props.OnRouteChange('home');\r\n                }\r\n                // console.log(data);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { OnRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l shadow-4 mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"br3 measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onSignIn}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Sign in\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p\r\n                                onClick={() => OnRouteChange('register')}\r\n                                className=\"f5 pointer dim black db\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            RegisterEmail: '',\r\n            RegisterPassword: '',\r\n            RegisterName: '',\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ RegisterEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ RegisterPassword: event.target.value })\r\n    }\r\n\r\n    onNameChange = (event) => {\r\n        this.setState({ RegisterName: event.target.value })\r\n    }\r\n\r\n    onRegister = () => {\r\n        fetch('https://mighty-ocean-50915.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.RegisterEmail,\r\n                password: this.state.RegisterPassword,\r\n                name: this.state.RegisterName\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.OnRouteChange('home');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { OnRouteChange } = this.props\r\n        return (\r\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l shadow-4 mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"br3 measure \">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f2 fw6 ph0 mh0 center\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"name\">Name</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"tex\"\r\n                                    name=\"name\"\r\n                                    id=\"name\"\r\n                                    onChange={this.onNameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\"\r\n                                    name=\"email-address\"\r\n                                    id=\"email-address\"\r\n                                    onChange={this.onEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f5\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input\r\n                                onClick={this.onRegister}\r\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                value=\"Register\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport Particles from \"react-tsparticles\";\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport './App.css';\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  route: 'home',\r\n  IsSignedIn: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    enteries: 0,\r\n    joined: ''\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        enteries: data.enteries,\r\n        joined: data.joined\r\n      }\r\n    })\r\n  }\r\n\r\n  DisplayBox = (boxs) => {\r\n    this.setState({ box: boxs });\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ box: {} })\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch('https://mighty-ocean-50915.herokuapp.com/imageUrl', {\r\n      method: 'post',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify({\r\n        url: this.state.input,\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response && response.outputs[0].data.regions) {\r\n          fetch('https://mighty-ocean-50915.herokuapp.com/image', {\r\n            method: 'put',\r\n            headers: { 'Content-type': 'application/json' },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id,\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { enteries: count }))\r\n            })\r\n            .catch(console.log)\r\n          this.DisplayBox(this.calculateface(response))\r\n        }\r\n      })\r\n      .catch(console.log)\r\n  }\r\n\r\n  calculateface = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = image.width;\r\n    const height = image.height;\r\n    return ({\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    });\r\n  }\r\n\r\n\r\n  OnRouteChange = (rout) => {\r\n    if (rout === 'signout') {\r\n      this.setState(initialState)\r\n    } else if (rout === 'home') {\r\n      this.setState({ IsSignedIn: true })\r\n    }\r\n    this.setState({ route: rout })\r\n  }\r\n\r\n  render() {\r\n    const { IsSignedIn, imageUrl, box, user } = this.state;\r\n    return (\r\n      <div className=\"App\" >\r\n\r\n        <Particles\r\n          id=\"tsparticles\"\r\n          options={{\r\n            fpsLimit: 120,\r\n            interactivity: {\r\n              events: {\r\n                onHover: {\r\n                  enable: true,\r\n                  mode: \"repulse\",\r\n                },\r\n                resize: true,\r\n              }\r\n            },\r\n            particles: {\r\n              color: {\r\n                value: \"#ffffff\",\r\n              },\r\n              links: {\r\n                color: \"#ffffff\",\r\n                distance: 150,\r\n                enable: true,\r\n                opacity: 0.5,\r\n                width: 1,\r\n              },\r\n              collisions: {\r\n                enable: true,\r\n              },\r\n              move: {\r\n                direction: \"none\",\r\n                enable: true,\r\n                outMode: \"bounce\",\r\n                random: false,\r\n                speed: 2,\r\n                straight: false,\r\n              },\r\n              number: {\r\n                density: {\r\n                  enable: true,\r\n                  area: 800,\r\n                },\r\n                value: 35,\r\n              },\r\n              opacity: {\r\n                value: 0.5,\r\n              },\r\n              shape: {\r\n                type: \"circle\",\r\n              },\r\n              size: {\r\n                random: true,\r\n                value: 5,\r\n              },\r\n            },\r\n            detectRetina: true,\r\n          }}\r\n        />\r\n\r\n        {/* <Navigation IsSignedIn={IsSignedIn} OnRouteChange={this.OnRouteChange} /> */}\r\n        {(this.state.route === 'home')\r\n          ?\r\n          <div style={{ marginTop: '13vh' }}>\r\n            <Logo />\r\n            <Rank\r\n              name={user.name}\r\n              enteries={user.enteries}\r\n            />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceRecognition box={box} imageUrl={imageUrl} />\r\n          </div>\r\n          :\r\n          (\r\n            this.state.route === 'register'\r\n              ? <Register loadUser={this.loadUser} OnRouteChange={this.OnRouteChange} />\r\n              : <SignIn loadUser={this.loadUser} OnRouteChange={this.OnRouteChange} />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}